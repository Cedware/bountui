name: Build
permissions:
  contents: write
on:
  pull_request:
    branches:
      - main
      - develop
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run tests
        run: cargo test
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: windows-latest
            binary: bountui.exe
            target: x86_64-pc-windows-gnu
          - runner: ubuntu-latest
            binary: bountui
            target: x86_64-unknown-linux-musl
          - runner: macos-latest
            binary: bountui
            target: x86_64-apple-darwin
          - runner: macos-latest
            binary: bountui
            target: aarch64-apple-darwin
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Install target
        run: rustup target add ${{ matrix.target }}
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build --target ${{ matrix.target }} --release
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bountui-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/${{ matrix.binary }}
          retention-days: 1
  release:
    needs:
        - build
        - test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      new_release_version: ${{ steps.get_version.outputs.new_release_version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4.1.0
        with:
          node-version: 20.9.0
      - name: Npm install
        run: npm install
      - name: Download all artifacts
        id: download_artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      - name: Get Version
        id: get_version
        uses: cycjimmy/semantic-release-action@v4
        with:
          dry_run: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Zip artifacts
        run: |
          for file in ./artifacts/*; do
            zip_name=$(basename "$file").zip
            zip_name=${zip_name/bountui/bountui-${{ steps.get_version.outputs.new_release_version }}}
            zip -rj $zip_name $file
          done
      - name: Semantic Release
        id: semantic_release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish_aur:
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.new_release_version
    steps:
      - uses: actions/checkout@v4
        with:
          path: source_repo
      - name: Publish to AUR
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AUR_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan aur.archlinux.org >> ~/.ssh/known_hosts
          git config --global user.email "cedware-dev@protonmail.com"
          git config --global user.name "Cedric Krause"
          git clone ssh://aur@aur.archlinux.org/bountui aur
          if [ -f aur/PKGBUILD ]; then
            source aur/PKGBUILD
            pkgrel=$((pkgrel+1))
          else
            pkgrel=1
          fi
          cp source_repo/PKGBUILD aur/PKGBUILD
          src_tarball_url=https://github.com/${{ github.repository }}/archive/refs/tags/v${{ needs.release.outputs.new_release_version }}.tar.gz
          curl -L $src_tarball_url -o src.tar.gz
          checksum=$(sha256sum src.tar.gz | cut -d ' ' -f 1)
          echo "checksum: $checksum"
          sed -i "s/pkgrel=.*/pkgrel=$pkgrel/" aur/PKGBUILD
          sed -i "s/pkgver=.*/pkgver=${{ needs.release.outputs.new_release_version }}/" aur/PKGBUILD
          sed -i "s|source=.*|source=(\"$src_tarball_url\")|" aur/PKGBUILD
          sed -i "s/sha256sums=.*/sha256sums=(\"$checksum\")/" aur/PKGBUILD
          cd aur
          docker run --rm -v $GITHUB_WORKSPACE/aur:/workspace -w /workspace -u $(id -u):$(id -g) archlinux:latest bash -c "
            makepkg --printsrcinfo > .SRCINFO
          "
          git add PKGBUILD
          git add .SRCINFO
          git commit -m "Update PKGBUILD for v${{ needs.release.outputs.new_release_version }}"
          git push origin master

  update_homebrew_formula:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: cedware/homebrew-test-formulas
          token: ${{ secrets.PAT_HOMEBREW_REPO }}
      - name: update contents
        run: |
          bin_archive=https://github.com/Cedware/bountui/releases/download/v0.4.0/bountui-0.4.0-aarch64-apple-darwin.zip
          curl -L $bin_archive -o bin.zip
          checksum=$(sha256sum bin.zip | cut -d ' ' -f 1)
          echo "checksum: $checksum"
          sed -i "s|^  url \".*\"|  url \"${bin_archive}\"|" Formula/bountui.rb
          sed -i "s|^  sha256 \".*\"|  sha256 \"${checksum}\"|" Formula/bountui.rb
          git config --global user.email "cedware-dev@protonmail.com"
          git config --global user.name "Cedric Krause"
          git add .
          git commit -m "Updated bountui formula to version x.y.z"
          git push
